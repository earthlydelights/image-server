<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   xmlns="http://xmlns.jcp.org/xml/ns/javaee" 
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" 
  id="image-server" version="3.1">
  
    <display-name>image-server</display-name>
    <session-config>
        <tracking-mode>COOKIE</tracking-mode>
    </session-config>

    <error-page>
        <error-code>401</error-code>
        <location>/WEB-INF/401.jsp</location>
    </error-page>

    <error-page>
        <error-code>403</error-code>
        <location>/WEB-INF/403.jsp</location>
    </error-page>

    <error-page>
        <error-code>404</error-code>
        <location>/WEB-INF/404.jsp</location>
    </error-page>


    <servlet>
        <servlet-name>jsp</servlet-name>
        <servlet-class>org.apache.jasper.servlet.JspServlet</servlet-class>
        <init-param>
            <param-name>fork</param-name>
            <param-value>false</param-value>
        </init-param>
        <init-param>
            <param-name>xpoweredBy</param-name>
            <param-value>false</param-value>
        </init-param>
        <init-param>
            <param-name>compilerSourceVM</param-name>
            <param-value>1.8</param-value>
        </init-param>
        <init-param>
            <param-name>compilerTargetVM</param-name>
            <param-value>1.8</param-value>
        </init-param>
        <load-on-startup>3</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>jolokia-agent</servlet-name>
        <servlet-class>org.jolokia.http.AgentServlet</servlet-class>
        <init-param>
            <description>
        Class names (comma separated) of RequestDispatcher used in addition
        to the LocalRequestDispatcher
      </description>
            <param-name>dispatcherClasses</param-name>
            <param-value>org.jolokia.jsr160.Jsr160RequestDispatcher</param-value>
        </init-param>
        <init-param>
            <description>
        Debugging state after startup. Can be changed via
        the Config MBean during runtime
      </description>
            <param-name>debug</param-name>
            <param-value>false</param-value>
        </init-param>
        <init-param>
            <description>
        Entries to keep in the history. Can be changed during
        runtime via the config MBean
      </description>
            <param-name>historyMaxEntries</param-name>
            <param-value>10</param-value>
        </init-param>
        <init-param>
            <description>
        Maximum number of entries to keed in the local
        debug history if switched on. Can be change via
        the config MBean during runtime.
      </description>
            <param-name>debugMaxEntries</param-name>
            <param-value>100</param-value>
        </init-param>
        <init-param>
            <description>
        Maximum depth when traversing bean properties.
        If set to 0, depth checking is disabled
      </description>
            <param-name>maxDepth</param-name>
            <param-value>15</param-value>
        </init-param>
        <init-param>
            <description>
        Maximum size of collections returned when
        serializing to JSON. When set to 0, not
        collections are truncated.
      </description>
            <param-name>maxCollectionSize</param-name>
            <param-value>1000</param-value>
        </init-param>
        <init-param>
            <description>
        Maximum number of objects which is traversed
        when serializing a single response. Use this
        as airbag to avoid boosting your memory and
        network traffic. Nevertheless, when set to 0
        not limit is used.
      </description>
            <param-name>maxObjects</param-name>
            <param-value>0</param-value>
        </init-param>
        <init-param>
            <description>
        Options specific for certain application
        server detectors. Detectors can evaluate these
        options and perform a specific initialization based
        on these options. The value is a JSON object with
        the detector's name as key and the options as value.
        E.g. '{glassfish: {bootAmx: false}}' would prevent
        the booting of the AMX subsystem on a glassfish with
        is done by default.
      </description>
            <param-name>detectorOptions</param-name>
            <param-value>{}</param-value>
        </init-param>
        <init-param>
            <description>
        This option specifies in which order the key-value properties within
        ObjectNames as returned by "list" or "search" are returned. By default
        this is the so called 'canonical order' in which the keys are sorted
        alphabetically. If this option is set to "false", then the natural
        order is used, i.e. the object name as it was registered. This option
        can be overridden with a query parameter of the same name.
      </description>
            <param-name>canonicalNaming</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <description>
        Whether to include a stacktrace of an exception in case
        of an error. By default it it set to "true" in which case
        the stacktrace is always included. If set to "false", no
        stacktrace is included. If the value is "runtime" a stacktrace
        is only included for RuntimeExceptions. This global option
        can be overridden with a query parameter.
      </description>
            <param-name>includeStackTrace</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <description>
        When this parameter is set to "true", then an exception thrown
        will be serialized as JSON and included in the response
        under the key "error_value". By default it is "false". This global
        option can be overridden by a query parameter of the same name.
      </description>
            <param-name>serializeException</param-name>
            <param-value>false</param-value>
        </init-param>
        <init-param>
            <description>
                If discoveryEnabled is set to true, then this servlet will listen
                for multicast discovery request and responds with its agent URL and
                other server specific information. Instead of setting this confog variable,
                discovery can be also enabled via the system property "jolokia.discoveryEnabled"
                or the environment variable "JOLOKIA_DISCOVERY_ENABLED".

                In addition the config parameter "discoveryAgentUrl" can be used to set the the agent's URL.
                By default, auto detection (after the first request was processed by the servlet)) of the URL is used.
                If the URL is set, then discovery is automatically enabled (i.e. there is
                no need to set "discoveryEnabled=true"). This configuration option
                is especially useful if the WAR is used in a proxy setup. Instead of setting the URL
                here, it can be set also either via the system property "jolokia.discoveryAgentUrl" or the
                environment variable "JOLOKIA_DISCOVERY_AGENT_URL".
            </description>
            <param-name>discoveryEnabled</param-name>
            <param-value>false</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>jolokia-agent</servlet-name>
        <url-pattern>/jolokia/*</url-pattern>
    </servlet-mapping>

    <login-config>
        <auth-method>FORM</auth-method>
    </login-config>

    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Protected Area</web-resource-name>
            <url-pattern>/modules/*</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>Everyone</role-name>
        </auth-constraint>
    </security-constraint>

    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Protected Area</web-resource-name>
            <url-pattern>/wizardry/*</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>wizard</role-name>
            <role-name>BUILTIN\Administrators</role-name><!-- this is a Windows role - only here to enable testing with waffle -->
        </auth-constraint>
    </security-constraint>

    <security-role>
        <description>All SAP HANA Cloud Platform users</description>
        <role-name>Everyone</role-name>
    </security-role>

    <security-role>
        <description>admins</description>
        <role-name>wizard</role-name>
    </security-role>

    <resource-ref>
        <res-ref-name>EcmService</res-ref-name>
        <res-type>com.sap.ecm.api.EcmService</res-type>
    </resource-ref>

    <resource-ref>
        <res-ref-name>jdbc/DefaultDB</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
    </resource-ref>

    <resource-ref>
        <res-ref-name>mail/SAPInternalNWCloudSession</res-ref-name>
        <res-type>javax.mail.Session</res-type>
     </resource-ref>

</web-app>
